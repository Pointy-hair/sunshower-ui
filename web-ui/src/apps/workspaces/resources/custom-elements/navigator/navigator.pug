template
    ul(id="${controlId}").side-nav
        li.side-nav-header
            .side-nav-toggle
                i.material-icons.mdi.mdi-view-quilt
                //span.mdi.mdi-code-less-than-or-equal
            .side-nav-search
                i.material-icons.mdi.mdi.mdi-filter-outline.side-nav-search-icon
                input(type="text" placeholder="Search")

        //todo check for active
        .navigator-content.au-animate.active(ref="rootElement", anim-enter="wipeLeftToRight", style="border:1px solid red; height:100%")
            li.dashboard("${context.color ? context.color : 'default-color'}")
                a.waves-effect(href="${current.href ? current.href : '/'}")
                    summary-icon(stroke="none" fill="#239ae8" textColor="white" text="${context.title}", size="36")
                    | ${context.name}
                    //| Dashboard
            li.no-padding
                ul.collapsible
                    li(repeat.for="group of groups")
                        a.collapsible-header.waves-effect
                            //(click.delegate="context.navigate(nav)")
                            | ${group.name}
                            i.material-icons.mdi.mdi-chevron-right.dropdown
                        .collapsible-body
                            ul
                                li(repeat.for="element of group.elements")
                                    a(click.delegate="context.navigate(element)") ${element.name}
            li.create-context(if.bind="context.create")
                a.btn.waves-effect.waves-teal(href="#" class="${context.color ? context.color : 'default-color'}")
                    | Create ${context.title.slice(0, -1)}

    ul.side-nav-small
        li.side-nav-header(title="Show navigation"
            data-activates='${controlId}',
            ref="navigatorControl")
            i.material-icons.mdi.mdi-view-quilt
        //todo determine whether it should be active or not
        li.dashboard(class="active ${context.color ? context.color : 'default-color'}")
            a.waves-effect(href="${current.href ? current.href : '/'}")
                summary-icon(stroke="none" fill="#239ae8" textColor="white" text="${context.title}")
        li(repeat.for="group of groups")
            a.waves-effect.waves-teal.waves-circle(href="#")
                i.material-icons.mdi(if.bind="group.icon" class="${group.icon}")
                //todo group icon
                | ${group.name}
