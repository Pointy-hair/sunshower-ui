apply plugin: 'ear'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact ear
        }

    }
}

configurations {
    site

    earlib.exclude group: 'dom4j'
}



dependencies {
    earlib "io.hasli.api:schemata"
    earlib "io.hasli.api:core-api"
    earlib "io.hasli.api:common-api"
    earlib "io.hasli.api:security-api"
    earlib "io.hasli.api:vault-api"
    earlib "io.hasli.search:search-es"
    earlib "io.hasli.hfs:hfs-service"
    earlib "io.hasli.service:service-vault"
    earlib "io.hasli.service:service-hal"
    earlib "io.hasli.hal:hal-docker"
    earlib "io.hasli.service:service-csp"
    earlib "io.hasli.service:service-core"
    earlib "io.hasli.service:service-security"
    earlib "io.hasli.persist:persist-api:1.00.000.000-SNAPSHOT"
    earlib "io.hasli.persist:persist-core:1.00.000.000-SNAPSHOT"
    earlib "io.hasli.persist:persist-hibernate:1.00.000.000-SNAPSHOT"
    earlib "io.hasli.persist:persist-jpa:1.00.000.000-SNAPSHOT"
    deploy project(path: ':web:web-site', configuration: 'archives')
    deploy project(path: ':web:web-service', configuration:'archives')
}


ear {
    rename { deployment ->
        return stripVersion(deployment)
    }
}


String stripVersion(String input) {
    if(input.endsWith(".xml") || input.endsWith(".MF")) {
        return input
    }
    int fstIndexOf = input.indexOf('-');
    int lastIndexOf = input.lastIndexOf('.');
    if(fstIndexOf > -1 && lastIndexOf > -1) {
        final String extension = input.substring(lastIndexOf, input.length());
        final String fileName = input.substring(0, input.indexOf('-', fstIndexOf + 1));
        return fileName + extension;
    } else {
        return input;
    }
}
